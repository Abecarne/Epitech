#!/usr/bin/env python3
##
## EPITECH PROJECT, 2022
## delivery [WSL: Ubuntu-20.04]
## File description:
## 205IQ
##

import sys
from math import *
from time import *

def help():
    print("USAGE\n    ./205IQ u s [IQ1] [IQ2]")
    print("\nDESCRIPTION")
    print("    u        mean")
    print("    s        standard deviation")
    print("    IQ1      minimum IQ")
    print("    IQ2      maximum IQ")
    exit(0)

def is_intarg(str):
    try:
        int(str)
        return True
    except ValueError:
        return False

def error():
    if len(sys.argv) < 3 or len(sys.argv) > 5:
        sys.stderr.write("Incorrect Parameters\n")
        exit(84)
    for i in range(1, len(sys.argv)):
        if not is_intarg(sys.argv[i]):
            sys.stderr.write("Error: invalid arguments\n")
            exit(84)
    for i in range(1, len(sys.argv)):
        if int(sys.argv[i]) < 0:
            sys.stderr.write("Error: invalid arguments\n")
            exit(84)
    if (int(sys.argv[1]) > 200):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)
    if (len(sys.argv) == 5 and int(sys.argv[3]) > int(sys.argv[4])):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)
    if (len(sys.argv) > 3 and int(sys.argv[3]) >= 200):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)
    if (len(sys.argv) == 5 and (int(sys.argv[4]) > 200 or int(sys.argv[4]) < 0)):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)
    if (len(sys.argv) == 5 and int(sys.argv[4]) <= int(sys.argv[3])):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)
    if (len(sys.argv) == 4 and (int(sys.argv[3]) > 200 or int(sys.argv[3]) < 0)):
        sys.stderr.write("Error: invalid arguments\n")
        exit(84)

def withoutIQ(u, s):
    res = 0
    expo = 0
    s = int(s)
    u = int(u)

    for x in range(1, 201):
        res = (1 / (s * sqrt(2 * pi)))
        expo = -0.5 * (((x - u)**2) / (s**2))
        expo = exp(expo)
        res *= expo
        print("%i " % x + "%.5f" % res)

def minimumIQ(u, s, iq1):
    res = 0
    expo = 0
    stat = 0
    s = int(s)
    u = int(u)
    x = 0

    while x < int(iq1):
        res = (1 / (s * sqrt(2 * pi)))
        expo = -0.5 * (((x - u)**2) / (s**2))
        expo = exp(expo)
        res *= expo
        stat += res
        x += 0.01
    print("%.1f" % stat + "%" + " of people have an IQ inferior to " + iq1)

def intervalIQ(u, s, iq1, iq2):
    res = 0
    expo = 0
    stat = 0
    s = int(s)
    u = int(u)
    x = int(iq1)

    while x < int(iq2):
        res = (1 / (s * sqrt(2 * pi)))
        expo = -0.5 * (((x - u)**2) / (s**2))
        expo = exp(expo)
        res *= expo
        stat += res
        x += 0.01
    print("%.1f" % stat + "%" + " of people have an IQ between " + iq1 + " and " + iq2)

def main():
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        help()
    else:
        error()
        if len(sys.argv) == 3:
            withoutIQ(sys.argv[1], sys.argv[2])
        if len(sys.argv) == 4:
            minimumIQ(sys.argv[1], sys.argv[2], sys.argv[3])
        if len(sys.argv) == 5:
            intervalIQ(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])
        return 0
    
if __name__ == "__main__":
    main()